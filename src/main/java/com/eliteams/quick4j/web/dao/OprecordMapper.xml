<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eliteams.quick4j.web.dao.OprecordMapper" >
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.Oprecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="deciveid" property="deciveid" jdbcType="BIGINT" />
    <result column="opengineer" property="opengineer" jdbcType="BIGINT" />
    <result column="opdate" property="opdate" jdbcType="TIMESTAMP" />
    <result column="opcontent" property="opcontent" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, deciveid, opengineer, opdate, opcontent, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.eliteams.quick4j.web.model.OprecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oprecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from oprecord
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from oprecord
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.OprecordExample" >
    delete from oprecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.Oprecord" >
    insert into oprecord (id, deciveid, opengineer, 
      opdate, opcontent, type
      )
    values (#{id,jdbcType=BIGINT}, #{deciveid,jdbcType=BIGINT}, #{opengineer,jdbcType=BIGINT}, 
      #{opdate,jdbcType=TIMESTAMP}, #{opcontent,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.Oprecord" >
    insert into oprecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deciveid != null" >
        deciveid,
      </if>
      <if test="opengineer != null" >
        opengineer,
      </if>
      <if test="opdate != null" >
        opdate,
      </if>
      <if test="opcontent != null" >
        opcontent,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deciveid != null" >
        #{deciveid,jdbcType=BIGINT},
      </if>
      <if test="opengineer != null" >
        #{opengineer,jdbcType=BIGINT},
      </if>
      <if test="opdate != null" >
        #{opdate,jdbcType=TIMESTAMP},
      </if>
      <if test="opcontent != null" >
        #{opcontent,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.OprecordExample" resultType="java.lang.Integer" >
    select count(*) from oprecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oprecord
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.deciveid != null" >
        deciveid = #{record.deciveid,jdbcType=BIGINT},
      </if>
      <if test="record.opengineer != null" >
        opengineer = #{record.opengineer,jdbcType=BIGINT},
      </if>
      <if test="record.opdate != null" >
        opdate = #{record.opdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opcontent != null" >
        opcontent = #{record.opcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oprecord
    set id = #{record.id,jdbcType=BIGINT},
      deciveid = #{record.deciveid,jdbcType=BIGINT},
      opengineer = #{record.opengineer,jdbcType=BIGINT},
      opdate = #{record.opdate,jdbcType=TIMESTAMP},
      opcontent = #{record.opcontent,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.Oprecord" >
    update oprecord
    <set >
      <if test="deciveid != null" >
        deciveid = #{deciveid,jdbcType=BIGINT},
      </if>
      <if test="opengineer != null" >
        opengineer = #{opengineer,jdbcType=BIGINT},
      </if>
      <if test="opdate != null" >
        opdate = #{opdate,jdbcType=TIMESTAMP},
      </if>
      <if test="opcontent != null" >
        opcontent = #{opcontent,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.Oprecord" >
    update oprecord
    set deciveid = #{deciveid,jdbcType=BIGINT},
      opengineer = #{opengineer,jdbcType=BIGINT},
      opdate = #{opdate,jdbcType=TIMESTAMP},
      opcontent = #{opcontent,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>