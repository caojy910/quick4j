<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eliteams.quick4j.web.dao.EngineerMapper">
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.Engineer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="headimg" jdbcType="VARCHAR" property="headimg" />
    <result column="companyid" jdbcType="BIGINT" property="companyid" />
    <result column="partment" jdbcType="VARCHAR" property="partment" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, headimg, companyid, partment, type, level
  </sql>
  <select id="selectByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from engineer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from engineer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample">
    delete from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.Engineer">
    insert into engineer (id, name, headimg, 
      companyid, partment, type, 
      level)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR}, 
      #{companyid,jdbcType=BIGINT}, #{partment,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.Engineer">
    insert into engineer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="headimg != null">
        headimg,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="partment != null">
        partment,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null">
        #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=BIGINT},
      </if>
      <if test="partment != null">
        #{partment,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample" resultType="java.lang.Integer">
    select count(*) from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update engineer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.headimg != null">
        headimg = #{record.headimg,jdbcType=VARCHAR},
      </if>
      <if test="record.companyid != null">
        companyid = #{record.companyid,jdbcType=BIGINT},
      </if>
      <if test="record.partment != null">
        partment = #{record.partment,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update engineer
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      headimg = #{record.headimg,jdbcType=VARCHAR},
      companyid = #{record.companyid,jdbcType=BIGINT},
      partment = #{record.partment,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.Engineer">
    update engineer
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null">
        headimg = #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=BIGINT},
      </if>
      <if test="partment != null">
        partment = #{partment,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.Engineer">
    update engineer
    set name = #{name,jdbcType=VARCHAR},
      headimg = #{headimg,jdbcType=VARCHAR},
      companyid = #{companyid,jdbcType=BIGINT},
      partment = #{partment,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.Engineer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="headimg" jdbcType="VARCHAR" property="headimg" />
    <result column="companyid" jdbcType="BIGINT" property="companyid" />
    <result column="partment" jdbcType="VARCHAR" property="partment" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, headimg, companyid, partment, type, level
  </sql>
  <select id="selectByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from engineer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from engineer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample">
    delete from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.Engineer">
    insert into engineer (id, name, headimg, 
      companyid, partment, type, 
      level)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR}, 
      #{companyid,jdbcType=BIGINT}, #{partment,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.Engineer">
    insert into engineer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="headimg != null">
        headimg,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="partment != null">
        partment,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null">
        #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=BIGINT},
      </if>
      <if test="partment != null">
        #{partment,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample" resultType="java.lang.Integer">
    select count(*) from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update engineer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.headimg != null">
        headimg = #{record.headimg,jdbcType=VARCHAR},
      </if>
      <if test="record.companyid != null">
        companyid = #{record.companyid,jdbcType=BIGINT},
      </if>
      <if test="record.partment != null">
        partment = #{record.partment,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update engineer
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      headimg = #{record.headimg,jdbcType=VARCHAR},
      companyid = #{record.companyid,jdbcType=BIGINT},
      partment = #{record.partment,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.Engineer">
    update engineer
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null">
        headimg = #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=BIGINT},
      </if>
      <if test="partment != null">
        partment = #{partment,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.Engineer">
    update engineer
    set name = #{name,jdbcType=VARCHAR},
      headimg = #{headimg,jdbcType=VARCHAR},
      companyid = #{companyid,jdbcType=BIGINT},
      partment = #{partment,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.Engineer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="headimg" jdbcType="VARCHAR" property="headimg" />
    <result column="companyid" jdbcType="BIGINT" property="companyid" />
    <result column="partment" jdbcType="VARCHAR" property="partment" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, headimg, companyid, partment, type, level
  </sql>
  <select id="selectByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from engineer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from engineer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample">
    delete from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.Engineer">
    insert into engineer (id, name, headimg, 
      companyid, partment, type, 
      level)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR}, 
      #{companyid,jdbcType=BIGINT}, #{partment,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.Engineer">
    insert into engineer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="headimg != null">
        headimg,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="partment != null">
        partment,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null">
        #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=BIGINT},
      </if>
      <if test="partment != null">
        #{partment,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.EngineerExample" resultType="java.lang.Integer">
    select count(*) from engineer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update engineer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.headimg != null">
        headimg = #{record.headimg,jdbcType=VARCHAR},
      </if>
      <if test="record.companyid != null">
        companyid = #{record.companyid,jdbcType=BIGINT},
      </if>
      <if test="record.partment != null">
        partment = #{record.partment,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update engineer
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      headimg = #{record.headimg,jdbcType=VARCHAR},
      companyid = #{record.companyid,jdbcType=BIGINT},
      partment = #{record.partment,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.Engineer">
    update engineer
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="headimg != null">
        headimg = #{headimg,jdbcType=VARCHAR},
      </if>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=BIGINT},
      </if>
      <if test="partment != null">
        partment = #{partment,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.Engineer">
    update engineer
    set name = #{name,jdbcType=VARCHAR},
      headimg = #{headimg,jdbcType=VARCHAR},
      companyid = #{companyid,jdbcType=BIGINT},
      partment = #{partment,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>